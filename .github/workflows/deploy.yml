name: Deploy MVP to cloud.ru

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VM_IP }} >> ~/.ssh/known_hosts
          echo "✅ Known hosts added for ${{ secrets.VM_IP }}"
          
      - name: Test SSH connection
        run: |
          echo "🔍 Testing SSH connection to ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "echo 'SSH connection successful' && whoami && pwd"
          
      - name: Deploy to VM
        run: |
          echo "🚀 Deploying to VM ${{ secrets.VM_IP }}..."
          
          # Создание директории для деплоя
          echo "📁 Creating deployment directory..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "mkdir -p /opt/tutuu-market && echo 'Directory created'"
          
          # Копирование docker-compose файлов
          echo "📋 Copying docker-compose files..."
          scp docker-compose.yml ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          scp docker-compose.prod.yml ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          echo "✅ Docker compose files copied"
          
          # Копирование конфигураций
          echo "⚙️ Copying configuration files..."
          scp nginx-mvp.conf ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          scp setup-ssl.sh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          scp backup-db.sh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          echo "✅ Configuration files copied"
          
          # Копирование сервисов
          echo "🔧 Copying services..."
          scp -r services/ ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/opt/tutuu-market/
          echo "✅ Services copied"
          
          # Проверка скопированных файлов
          echo "🔍 Checking copied files..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "ls -la /opt/tutuu-market/"
          
          # Настройка прав на скрипты
          echo "🔐 Setting script permissions..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "chmod +x /opt/tutuu-market/setup-ssl.sh /opt/tutuu-market/backup-db.sh"
          
          # Остановка старых контейнеров
          echo "🛑 Stopping old containers..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "cd /opt/tutuu-market && docker-compose -f docker-compose.prod.yml --profile prod down || true"
          
          # Сборка и запуск новых контейнеров
          echo "🏗️ Building and starting containers..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "cd /opt/tutuu-market && docker-compose -f docker-compose.prod.yml --profile prod up -d --build"
          
          # Настройка Nginx
          echo "🌐 Configuring Nginx..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "sudo cp /opt/tutuu-market/nginx-mvp.conf /etc/nginx/sites-available/mvp.tutuumarket.ru"
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "sudo ln -sf /etc/nginx/sites-available/mvp.tutuumarket.ru /etc/nginx/sites-enabled/"
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "sudo nginx -t && sudo systemctl reload nginx"
          
          # Настройка cron для резервного копирования
          echo "⏰ Setting up backup cron..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} "echo '0 2 * * * /opt/tutuu-market/backup-db.sh' | sudo crontab -"
          
          echo "✅ Deployment completed successfully!"
          
      - name: Health check
        run: |
          echo "🏥 Performing health check..."
          sleep 30
          
          # Проверка доступности сервисов
          for port in 3001 3002 3003 3004 3005; do
            if curl -f "http://${{ secrets.VM_IP }}:$port/health" > /dev/null 2>&1; then
              echo "✅ Service on port $port is healthy"
            else
              echo "❌ Service on port $port is not responding"
              exit 1
            fi
          done
          
          echo "🎉 All services are healthy!"
