version: "3.8"

services:
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: tutuu_user_service_prod
    environment:
      - NODE_ENV=production
      - PORT=3001
    ports:
      - "3001:3001"
    restart: unless-stopped
    profiles: [ "prod" ]
    depends_on:
      - postgres
      - redis

  catalog-service:
    build:
      context: ./services/catalog-service
      dockerfile: Dockerfile
    container_name: tutuu_catalog_service_prod
    environment:
      - NODE_ENV=production
      - PORT=3002
    ports:
      - "3002:3002"
    restart: unless-stopped
    profiles: [ "prod" ]
    depends_on:
      - postgres
      - redis

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: tutuu_order_service_prod
    environment:
      - NODE_ENV=production
      - PORT=3003
    ports:
      - "3003:3003"
    restart: unless-stopped
    profiles: [ "prod" ]
    depends_on:
      - postgres
      - redis

  logistics-service:
    build:
      context: ./services/logistics-service
      dockerfile: Dockerfile
    container_name: tutuu_logistics_service_prod
    environment:
      - NODE_ENV=production
      - PORT=3004
    ports:
      - "3004:3004"
    restart: unless-stopped
    profiles: [ "prod" ]
    depends_on:
      - postgres
      - redis

  ai-service:
    build:
      context: ./services/ai-service
      dockerfile: Dockerfile
    container_name: tutuu_ai_service_prod
    environment:
      - PYTHON_ENV=production
      - PORT=3005
    ports:
      - "3005:3005"
    restart: unless-stopped
    profiles: [ "prod" ]
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgis/postgis:15-3.3
    container_name: tutuu_postgres_prod
    environment:
      - POSTGRES_DB=tutuu_market
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles: [ "prod" ]

  redis:
    image: redis:7-alpine
    container_name: tutuu_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles: [ "prod" ]

volumes:
  postgres_data:
  redis_data:


